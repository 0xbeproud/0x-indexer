version: "3.9"
services:
  db:
    container_name: mysql8-indexer
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: indexer
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_USERNAME: app
      MYSQL_PASSWORD: app123
      TZ: Asia/Seoul
    volumes:
      - data:/var/run/mysqld
    ports:
      - 3306:3306
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root123 --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --range_optimizer_max_mem_size=16777216
    networks:
      - app

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: backend
#    command: sh -c "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app
#    redis:
#        container_name: redis
#        image: redis:latest
#        restart: always
#        volumes:
#            - redis:/data
#        ports:
#            - "6379:6379"
#        labels:
#            - "name=redis"
#            - "mode=standalone"
#        networks:
#            - app
#        #    command: redis-server --requirepass changeme --port 6379
#        command: redis-server --port 6379

volumes:
  data:
#    redis:

networks:
  app:
    driver: bridge
